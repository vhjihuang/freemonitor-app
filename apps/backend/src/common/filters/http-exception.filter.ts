import { ExceptionFilter, Catch, ArgumentsHost, Logger } from '@nestjs/common';
import { Request, Response } from 'express';
import { ErrorResponse } from '@freemonitor/types';
import { AppException } from '../exceptions/app.exception';

@Catch()
export class HttpExceptionFilter implements ExceptionFilter {
  private readonly logger = new Logger(HttpExceptionFilter.name);

  catch(exception: unknown, host: ArgumentsHost): void {
    const ctx = host.switchToHttp();
    const response = ctx.getResponse<Response>();
    const request = ctx.getRequest<Request>();

    // üõ°Ô∏è ÂÖ≥ÈîÆÈò≤Êä§ÔºöÂ¶ÇÊûúÂìçÂ∫îÂ∑≤ÂèëÈÄÅÔºåÁõ¥Êé•Ë∑≥ËøáÔºåÈÅøÂÖçÂ¥©Ê∫É
    if (response.headersSent) {
      this.logger.warn('ÂìçÂ∫îÂ∑≤ÂèëÈÄÅÔºåË∑≥ËøáÂºÇÂ∏∏ËøáÊª§Âô®ÂìçÂ∫îËÆæÁΩÆ', {
        url: request.url,
        method: request.method,
        exception: exception instanceof Error ? exception.message : String(exception),
      });
      return;
    }

    // ÂÖà‰øùÊåÅÂéüÊúâÈÄªËæëÔºåÂè™ÂØπAppException‰ΩøÁî®Êñ∞Ê†ºÂºè
    if (exception instanceof AppException) {
      const errorResponse: ErrorResponse = {
        success: false,
        statusCode: exception.statusCode,
        message: exception.message,
        errorCode: exception.errorCode,
        timestamp: exception.timestamp,
        path: request.url,
        details: exception.details,
      };
      response.status(exception.statusCode).json(errorResponse);
      return;
    }

    // ÂØπÂÖ∂‰ªñÂºÇÂ∏∏‰øùÊåÅÂéüÊúâÂ§ÑÁêÜÈÄªËæë
    const status = (exception as any).status || 500;
    const message = (exception as any).message || 'Internal Server Error';

    // ÊûÑÂª∫ÂéüÊúâÊ†ºÂºèÁöÑÂìçÂ∫î‰Ωì
    const errorResponse = {
      statusCode: status,
      message,
      timestamp: new Date().toISOString(),
      path: request.url,
    };

    // ËÆ∞ÂΩïÊó•Âøó
    if (status >= 500) {
      this.logger.error(
        `${status} ${request.method} ${request.url} - ${message}`,
        (exception as any).stack,
      );
    } else {
      this.logger.warn(
        `${status} ${request.method} ${request.url} - ${message}`,
      );
    }

    // ËøîÂõûÂéüÊúâÊ†ºÂºè
    response.status(status).json(errorResponse);
  }
}