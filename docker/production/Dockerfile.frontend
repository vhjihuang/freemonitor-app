# docker/production/Dockerfile.frontend
# 前端生产环境Dockerfile
# 构建阶段
FROM node:20-alpine AS builder

WORKDIR /app

# 启用 corepack
RUN corepack enable

# 复制根目录的配置文件
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json ./
COPY apps/frontend/package.json ./apps/frontend/
COPY apps/backend/package.json ./apps/backend/
COPY packages/types/package.json ./packages/types/

# 安装所有依赖（包括 dev）
RUN pnpm install --frozen-lockfile

# 复制源码
COPY apps/frontend ./apps/frontend
COPY packages/types ./packages/types

# 构建前端（静态导出）
ENV RENDER_STATIC=true
RUN pnpm --filter frontend build

# 生产阶段
FROM nginx:alpine AS production

# 复制构建结果
COPY --from=builder /app/apps/frontend/out /usr/share/nginx/html

# 复制 nginx 配置
COPY docker/production/nginx.conf /etc/nginx/conf.d/default.conf

# 设置非 root 用户
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# 启动 nginx
CMD ["nginx", "-g", "daemon off;"]